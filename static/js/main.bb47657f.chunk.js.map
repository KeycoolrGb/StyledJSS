{"version":3,"sources":["logo.svg","Components/Button.js","Components/Link.js","Components/TextField.js","theme/DemoTheme.js","redux/types/ToDoListType.js","redux/actions/ToDoListAction.js","ComponentToDoList/Container.js","theme/ToDoListDarkTheme.js","ComponentToDoList/TextField.js","ComponentToDoList/Button.js","ComponentToDoList/Dropdown.js","ComponentToDoList/Table.js","ComponentToDoList/Heading.js","theme/managerTheme.js","theme/ToDoListLightTheme.js","theme/ToDoListPrimaryTheme.js","BaitapStyleComponent/ToDoList/ToDoList.js","App.js","reportWebVitals.js","redux/Reducer/ToDoListReducer.js","redux/Reducer/RootReducer.js","index.js"],"names":["Button","styled","button","props","bgPrimary","border","children","className","restProps","input","inputColor","DemoTheme","ADD_TASK","CHANGE_THEME","DONE_TASK","DELETE_TASK","REDO_TASK","EDIT_TASK","UPDATE_TASK","doneTaskAction","taskId","type","deleteTaskAction","redoTaskAction","editTaskAction","task","updateTaskAction","taskName","Container","div","theme","bgColor","color","ToDoListDarkTheme","borderButton","borderRadiusButton","hoverTextColor","hoverBgColor","borderColor","colorDisable","Input","Label","span","TextField","label","Dropdown","select","Table","table","Thead","thead","Tr","tbody","tr","Th","td","th","backgroundColor","Heading3","h1","h2","h3","h4","h5","arrTheme","id","name","ToDoList","state","disabled","renderTaskToDo","taskList","filter","done","map","index","style","textAlign","onClick","dispatch","setState","renderTaskCompleted","class","renderTheme","value","this","themeToDoList","onChange","e","target","themeId","console","log","newTask","Date","now","addTaskAction","prevProps","prevState","taskEdit","Component","connect","toDoListReducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","trim","alert","taskListUpdate","findIndex","find","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb47657f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  color: red;\r\n  background: ${(props) =>\r\n    props.bgPrimary ? \"linear-gradient(red, blue, green)\" : \"blue\"};\r\n  outline: none;\r\n  border: ${(props) => (props.border ? \"none\" : \"1px solid red\")};\r\n  opacity: 1;\r\n  &:hover {\r\n    color: white;\r\n    background-color: red;\r\n    transition: all 0.5s;\r\n  }\r\n  &.button_style {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\n//Extending Styles - kế thừa css từ thằng cha\r\nexport const TomatoButton = styled(Button)`\r\n  background-color: pink;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// export const Link = (props) => {\r\n//   return <p className={props.className}>{props.children}</p>;\r\n// };\r\n// let {className, children} = props - bóc tách phần tử\r\n\r\n//Styling any component\r\nexport const Link = ({ children, className, ...restProps }) => {\r\n  return (\r\n    <a className={className} {...restProps}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: bold;\r\n  background-color: black;\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\n//STYLED COMPONENT STYLING PROPS SCSS\r\nexport const Input = styled.input`\r\n  color: ${(props) => props.inputColor || \"red\"};\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\n// bỏ cái này qua file riêng\r\nconst configLigthTheme = {\r\n  color: \"blue\",\r\n  backgroundColor: \"yellow\",\r\n  fontSize: \"25px\",\r\n  fontWeight: \"Bold\",\r\n};\r\nconst configDarkTheme = {\r\n  color: \"white\",\r\n  backgroundColor: \"black\",\r\n  fontSize: \"25px\",\r\n  fontWeight: \"Bold\",\r\n};\r\nfunction DemoTheme() {\r\n  const [state, setstate] = useState({ currentTheme: configLigthTheme });\r\n\r\n  const Container = styled.div`\r\n    padding: 5%;\r\n    color: ${(props) => props.theme.color};\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    font-size: ${(props) => props.theme.fontSize};\r\n    font-weight: ${(props) => props.theme.fontWeight};\r\n  `;\r\n  const handleChange = (e) => {\r\n    setstate({\r\n      currentTheme: e.target.value == \"1\" ? configLigthTheme : configDarkTheme,\r\n    });\r\n  };\r\n  return (\r\n    <ThemeProvider theme={state.currentTheme}>\r\n      <Container>123</Container>\r\n      <select onChange={handleChange}>\r\n        <option value=\"1\">Light Theme</option>\r\n        <option value=\"2\">Dark Theme</option>\r\n      </select>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default DemoTheme;\r\n","export const ADD_TASK = \"ADD_TASk\";\r\nexport const CHANGE_THEME = \"CHANGE_THEME\";\r\nexport const DONE_TASK = \"DONE_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const REDO_TASK = \"REDO_TASK\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\nexport const UPDATE_TASK = \"UPDATE_TASK\";\r\n","import {\r\n  ADD_TASK,\r\n  CHANGE_THEME,\r\n  DELETE_TASK,\r\n  DONE_TASK,\r\n  EDIT_TASK,\r\n  REDO_TASK,\r\n  UPDATE_TASK,\r\n} from \"../../redux/types/ToDoListType\";\r\nexport const addTaskAction = (newTask) => ({\r\n  type: ADD_TASK,\r\n  newTask,\r\n});\r\n\r\nexport const changeThemeAction = (themeId) => ({\r\n  type: CHANGE_THEME,\r\n  themeId,\r\n});\r\n\r\nexport const doneTaskAction = (taskId) => ({\r\n  type: DONE_TASK,\r\n  taskId,\r\n});\r\n\r\nexport const deleteTaskAction = (taskId) => ({\r\n  type: DELETE_TASK,\r\n  taskId,\r\n});\r\n\r\nexport const redoTaskAction = (taskId) => ({\r\n  type: REDO_TASK,\r\n  taskId,\r\n});\r\n\r\nexport const editTaskAction = (task) => ({\r\n  type: EDIT_TASK,\r\n  task,\r\n});\r\n\r\nexport const updateTaskAction = (taskName) => ({\r\n  type: UPDATE_TASK,\r\n  taskName,\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContainerFluid = styled.div`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.color};\r\n  border: 5px solid ${(props) => props.theme.color};\r\n  padding: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  text-align: left;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.color};\r\n  border: 5px solid ${(props) => props.theme.color};\r\n  padding: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  text-align: left;\r\n`;\r\n","export const ToDoListDarkTheme = {\r\n  bgColor: \"#343a40\",\r\n  color: \"#fff\",\r\n  borderButton: \"1px solid #fff\",\r\n  borderRadiusButton: \"none\",\r\n  hoverTextColor: \"#343a40\",\r\n  hoverBgColor: \"#fff\",\r\n  borderColor: \"#343a40\",\r\n  colorDisable: \"#dddddd\",\r\n};\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  border: 1px solid ${(props) => props.theme.color};\r\n  min-height: 35px;\r\n  height: 35px;\r\n  font-size: 17px;\r\n  width: auto;\r\n  display: initial;\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  color: ${(props) => props.theme.color};\r\n  width: auto;\r\n`;\r\n\r\nexport const TextField = ({ label, ...props }) => (\r\n  <span>\r\n    <Label>{label}</Label> <br></br>\r\n    <Input {...props} />\r\n  </span>\r\n);\r\n","import styled from \"styled-components\";\r\n//----------------button-------------------\r\nexport const Button = styled.button`\r\n  apperance: none;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.color};\r\n  border: ${(props) => props.theme.borderButton};\r\n  padding: 0.25em 0.5em;\r\n  transition: all 0.5s;\r\n  font-size: 17px;\r\n  &:hover {\r\n    color: ${(props) => props.theme.hoverTextColor};\r\n    background-color: ${(props) => props.theme.hoverBgColor};\r\n    border: ${(props) => props.theme.borderButton};\r\n  }\r\n  margin-left: 10px;\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    color: ${(props) => props.theme.colorDisable};\r\n    &:hover {\r\n      background-color: inherit;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Dropdown = styled.select`\r\n  width: 100%;\r\n  height: 50px;\r\n  font-size: 100%;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  border-radius: 0;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  border: 2px solid ${(props) => props.theme.color};\r\n  color: ${(props) => props.theme.color};\r\n  padding: 10px;\r\n  padding-right: 38px;\r\n  appearance: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  /* Adding transition effect */\r\n  transition: color 0.3s ease, background-color 0.3s ease,\r\n    border-bottom-color 0.3s ease;\r\n  &:hover {\r\n    color: ${(props) => props.theme.hoverTextColor};\r\n    background-color: ${(props) => props.theme.hoverBgColor};\r\n    border-bottom-color: #dcdcdc;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Table = styled.table`\r\n  color: ${(props) => props.theme.color};\r\n  width: 100%;\r\n  max-width: 100%;\r\n  margin-bottom: 1rem;\r\n  background-color: transparent;\r\n\r\n  border-spacing: 2px;\r\n  border-color: ${(props) => props.theme.color};\r\n`;\r\nexport const Thead = styled.thead`\r\n  display: table-header-group;\r\n  vertical-align: middle;\r\n  border: 1px solid ${(props) => props.theme.color};\r\n`;\r\n\r\nexport const Tbody = styled.tbody`\r\n  display: table-row-group;\r\n  vertical-align: middle;\r\n  border-color: inherit;\r\n`;\r\nexport const Tr = styled.tr`\r\n  display: table-row;\r\n  vertical-align: inherit;\r\n  border: 1px solid ${(props) => props.theme.color};\r\n`;\r\nexport const Td = styled.td`\r\n  padding: 0.75rem;\r\n  vertical-align: top;\r\n  border: 1px solid ${(props) => props.theme.color};\r\n`;\r\n\r\nexport const Th = styled.th`\r\n    background-color: ${(props) => props.theme.backgroundColor}\r\n    color: ${(props) => props.theme.color}\r\n    vertical-align: bottom;\r\n    text-align: inherit;\r\n    border-top: 1px solid ${(props) => props.theme.color};\r\n    padding: .75rem;\r\n    vertical-align: middle;\r\n    border-bottom: 1px solid ${(props) => props.theme.color};\r\n   \r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Heading1 = styled.h1`\r\n  font-size: 4rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading2 = styled.h2`\r\n  font-size: 3rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading3 = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading4 = styled.h4`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n\r\nexport const Heading5 = styled.h5`\r\n  font-size: 0.5rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n  color: ${(props) => {\r\n    return props.theme.color;\r\n  }};\r\n`;\r\n","import { ToDoListDarkTheme } from \"./ToDoListDarkTheme\";\r\nimport { ToDoListLightTheme } from \"./ToDoListLightTheme\";\r\nimport { ToDoListPrimaryTheme } from \"./ToDoListPrimaryTheme\";\r\n\r\nexport const arrTheme = [\r\n  {\r\n    id: 1,\r\n    name: \"Dark Theme\",\r\n    theme: ToDoListDarkTheme,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Light Theme\",\r\n    theme: ToDoListLightTheme,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Primary Theme\",\r\n    theme: ToDoListPrimaryTheme,\r\n  },\r\n];\r\n","export const ToDoListLightTheme = {\r\n  bgColor: \"#fff\",\r\n  color: \"#7952b3\",\r\n  borderButton: \"1px solid #7952b3\",\r\n  borderRadiusButton: \"none\",\r\n  hoverTextColor: \"#fff\",\r\n  hoverBgColor: \"#7952b3\",\r\n  borderColor: \"#7952b3\",\r\n  colorDisable: \"#dddddd\",\r\n};\r\n","export const ToDoListPrimaryTheme = {\r\n  bgColor: \"#fff\",\r\n  color: \"#343a40\",\r\n  borderButton: \"1px solid #343a40\",\r\n  borderRadiusButton: \"none\",\r\n  hoverTextColor: \"#fff\",\r\n  hoverBgColor: \"#343a40\",\r\n  borderColor: \"#343a40\",\r\n  colorDisable: \"#dddddd\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  addTaskAction,\r\n  changeThemeAction,\r\n  deleteTaskAction,\r\n  doneTaskAction,\r\n  redoTaskAction,\r\n  editTaskAction,\r\n  updateTaskAction,\r\n} from \"../../redux/actions/ToDoListAction\";\r\nimport { Container } from \"../../ComponentToDoList/Container\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { ToDoListDarkTheme } from \"../../theme/ToDoListDarkTheme\";\r\nimport { ToDoListLightTheme } from \"../../theme/ToDoListLightTheme\";\r\nimport { ToDoListPrimaryTheme } from \"../../theme/ToDoListPrimaryTheme\";\r\nimport { TextField } from \"../../ComponentToDoList/TextField\";\r\nimport { Button } from \"../../ComponentToDoList/Button\";\r\nimport { Dropdown } from \"../../ComponentToDoList/Dropdown\";\r\nimport { Table, Td, Tbody, Th, Thead, Tr } from \"../../ComponentToDoList/Table\";\r\nimport {\r\n  Heading1,\r\n  Heading2,\r\n  Heading3,\r\n  Heading4,\r\n  Heading5,\r\n} from \"../../ComponentToDoList/Heading\";\r\nimport { connect } from \"react-redux\";\r\nimport { arrTheme } from \"../../theme/managerTheme\";\r\nclass ToDoList extends Component {\r\n  state = {\r\n    taskName: \"\",\r\n    disabled: true,\r\n  };\r\n  renderTaskToDo = () => {\r\n    return this.props.taskList\r\n      .filter((task) => !task.done)\r\n      .map((task, index) => {\r\n        return (\r\n          <Tr key={index}>\r\n            <Th>{task.taskName}</Th>\r\n            <Th style={{ textAlign: \"right\" }}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.props.dispatch(deleteTaskAction(task.id));\r\n                }}\r\n              >\r\n                <i className=\"fa fa-trash\"></i>\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState(\r\n                    {\r\n                      disabled: false,\r\n                    },\r\n                    () => {\r\n                      this.props.dispatch(editTaskAction(task));\r\n                    }\r\n                  );\r\n                }}\r\n              >\r\n                <i className=\"fa fa-edit\"></i>\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  this.props.dispatch(doneTaskAction(task.id));\r\n                }}\r\n              >\r\n                <i className=\"fa fa-check\"></i>\r\n              </Button>\r\n            </Th>\r\n          </Tr>\r\n        );\r\n      });\r\n  };\r\n  renderTaskCompleted = () => {\r\n    return this.props.taskList\r\n      .filter((task) => task.done)\r\n      .map((task, index) => (\r\n        <Tr key={index}>\r\n          <Th>{task.taskName}</Th>\r\n          <Th style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              onClick={() => {\r\n                this.props.dispatch(deleteTaskAction(task.id));\r\n              }}\r\n            >\r\n              <i className=\"fa fa-trash\"></i>\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                this.props.dispatch(redoTaskAction(task.id));\r\n              }}\r\n            >\r\n              <i class=\"fa fa-redo-alt\"></i>\r\n            </Button>\r\n          </Th>\r\n        </Tr>\r\n      ));\r\n  };\r\n  // // handleChange = (e) => {\r\n  // //   const { value, name } = e.target;\r\n  // //   this.setState({\r\n  // //     [name]: value,\r\n  // //   });\r\n  // };\r\n  // render Theme\r\n  renderTheme = () => {\r\n    return arrTheme.map((theme, index) => {\r\n      return (\r\n        <option key={index} value={theme.id}>\r\n          {theme.name}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={this.props.themeToDoList}>\r\n        <Container className=\"w-50\">\r\n          <Dropdown\r\n            onChange={(e) => {\r\n              let { value } = e.target;\r\n              this.props.dispatch(changeThemeAction(value));\r\n            }}\r\n          >\r\n            {this.renderTheme()}\r\n          </Dropdown>\r\n          <Heading3>To Do List</Heading3>\r\n          <TextField\r\n            value={this.state.taskName}\r\n            onChange={(e) => {\r\n              this.setState(\r\n                {\r\n                  taskName: e.target.value,\r\n                },\r\n                () => {\r\n                  console.log(this.state);\r\n                }\r\n              );\r\n            }}\r\n            name=\"taskName\"\r\n            label=\"Task Name\"\r\n            className=\"w-50\"\r\n          ></TextField>\r\n          <Button\r\n            onClick={() => {\r\n              // lấy thông tin người dùng nhập vào từ input\r\n              let { taskName } = this.state;\r\n              //tạo ra một task object\r\n              let newTask = {\r\n                id: Date.now(),\r\n                taskName: taskName,\r\n                done: false,\r\n              };\r\n              //đưa task object lên redux thông qua phương thức dispatch\r\n              this.props.dispatch(addTaskAction(newTask));\r\n            }}\r\n          >\r\n            <i className=\"fa fa-plus\"></i> Add task\r\n          </Button>\r\n          {this.state.disabled ? (\r\n            <Button\r\n              disabled\r\n              onClick={() => {\r\n                this.props.dispatch(updateTaskAction(this.state.taskName));\r\n              }}\r\n            >\r\n              <i className=\"fa fa-upload\"></i> Update task\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={() => {\r\n                let { taskName } = this.state;\r\n                this.setState({ disabled: true, taskName: \"\" }, () => {\r\n                  this.props.dispatch(updateTaskAction(taskName));\r\n                });\r\n              }}\r\n            >\r\n              <i className=\"fa fa-upload\"></i> Update task\r\n            </Button>\r\n          )}\r\n          <hr />\r\n          <Heading3>Task To Do</Heading3>\r\n          <Table>\r\n            <Thead>{this.renderTaskToDo()}</Thead>\r\n          </Table>\r\n          <Heading3>Task Complete</Heading3>\r\n          <Table>\r\n            <Thead>{this.renderTaskCompleted()}</Thead>\r\n          </Table>\r\n        </Container>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n  //đây là lifecycle trả về props cũ và state cũ của component trước khi render (lifecycle này chạy sau render)\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //so sánh nếu như props trước đó (taskEdit trước mà khác taskEdit hiện tại thì mình mới setState)\r\n    if (prevProps.taskEdit.id !== this.props.taskEdit.id) {\r\n      this.setState({\r\n        taskName: this.props.taskEdit.taskName,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeToDoList: state.toDoListReducer.themeToDoList,\r\n  taskList: state.toDoListReducer.taskList,\r\n  taskEdit: state.toDoListReducer.taskEdit,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ToDoList);\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport DemoJss from \"./DemoJss/DemoJss\";\r\nimport DemoTheme from \"./theme/DemoTheme\";\r\nimport ToDoList from \"./BaitapStyleComponent/ToDoList/ToDoList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <DemoJss /> */}\r\n      {/* <DemoTheme /> */}\r\n      <ToDoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ToDoListDarkTheme } from \"../../theme/ToDoListDarkTheme\";\r\nimport { ToDoListLightTheme } from \"../../theme/ToDoListLightTheme\";\r\nimport { ToDoListPrimaryTheme } from \"../../theme/ToDoListPrimaryTheme\";\r\nimport {\r\n  ADD_TASK,\r\n  CHANGE_THEME,\r\n  DELETE_TASK,\r\n  DONE_TASK,\r\n  REDO_TASK,\r\n  EDIT_TASK,\r\n  UPDATE_TASK,\r\n} from \"../types/ToDoListType\";\r\nimport { arrTheme } from \"../../theme/managerTheme\";\r\n\r\nconst initialState = {\r\n  themeToDoList: ToDoListDarkTheme,\r\n  taskList: [\r\n    { id: \"task-1\", taskName: \"task 1\", done: true },\r\n    { id: \"task-2\", taskName: \"task 2\", done: true },\r\n    { id: \"task-3\", taskName: \"task 3\", done: false },\r\n    { id: \"task-4\", taskName: \"task 4\", done: false },\r\n    { id: \"task-5\", taskName: \"task 5\", done: true },\r\n  ],\r\n  taskEdit: { id: \"task-1\", taskName: \"task 1\", done: true },\r\n};\r\n\r\nconst toDoListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TASK: {\r\n      console.log(\"todo\", action.newTask);\r\n\r\n      //kiểm tra rỗng\r\n      if (action.newTask.taskName.trim() === \"\") {\r\n        alert(\"Task Name is Required\");\r\n        return { ...state };\r\n      }\r\n      // Kiểm tra tồn tại\r\n      let taskListUpdate = [...state.taskList];\r\n      let index = taskListUpdate.findIndex(\r\n        (task) => task.taskName === action.newTask.taskName\r\n      );\r\n      if (index !== -1) {\r\n        alert(\"Task name is exist\");\r\n        return { ...state };\r\n      }\r\n      // taskListUpdate.push(action.newTask);\r\n\r\n      // Xử lý xong thì gán taskList mới vào taskList\r\n      // state.taskList = taskListUpdate;\r\n      state.taskList = [...taskListUpdate, action.newTask];\r\n      return { ...state };\r\n    }\r\n    case CHANGE_THEME: {\r\n      // tìm ra theme dựa vào action.themeId được chọn\r\n      let theme = arrTheme.find((theme) => theme.id == action.themeId);\r\n      if (theme) {\r\n        // set lại theme cho state.themeToDoList\r\n        state.themeToDoList = theme.theme;\r\n      }\r\n      return { ...state };\r\n    }\r\n    case DONE_TASK: {\r\n      // CLick vào button check => dispatch lên action có taskId\r\n      let taskListUpdate = [...state.taskList];\r\n      /*  từ taskId tìm ra task đó ở vị trí nào trong mảng tiến hành cập nhật lại thuộc tính done = true. \r\n      Và cập nhật state của redux */\r\n\r\n      let index = taskListUpdate.findIndex((task) => task.id === action.taskId);\r\n      if (index !== -1) {\r\n        taskListUpdate[index].done = true;\r\n      }\r\n\r\n      // state.taskList = taskListUpdate;\r\n      return { ...state, taskList: taskListUpdate };\r\n    }\r\n    case DELETE_TASK: {\r\n      let taskListUpdate = [...state.taskList];\r\n      /* Cách 1 */\r\n      // let index = taskListUpdate.findIndex((task) => task.id === action.taskId);\r\n      // if (index !== -1) {\r\n      //   taskListUpdate.splice(index, 1);\r\n      // }\r\n      /* Cách 2 */\r\n      /* Gán lại giá trị cho mảng taskListUpdate = chính nó nhưng filter không có taskId đó */\r\n      // taskListUpdate = taskListUpdate.filter(\r\n      //   (task) => task.id !== action.taskId\r\n      // );\r\n\r\n      // return { ...state, taskList: taskListUpdate };\r\n\r\n      /* Cách 3 */\r\n      return {\r\n        ...state,\r\n        taskList: state.taskList.filter((task) => task.id !== action.taskId),\r\n      };\r\n    }\r\n    case REDO_TASK: {\r\n      let taskListUpdate = [...state.taskList];\r\n\r\n      let index = taskListUpdate.findIndex((task) => task.id === action.taskId);\r\n      if (index !== -1) {\r\n        taskListUpdate[index].done = false;\r\n      }\r\n\r\n      return { ...state, taskList: taskListUpdate };\r\n    }\r\n    case EDIT_TASK: {\r\n      return { ...state, taskEdit: action.task };\r\n    }\r\n    case UPDATE_TASK: {\r\n      // chỉnh sửa lại taskName của taskEdit\r\n      state.taskEdit = { ...state.taskEdit, taskName: action.taskName };\r\n\r\n      // tìm trong taskList cập nhật lại taskEdit người dùng update\r\n      let taskListUpdate = [...state.taskList];\r\n      let index = taskListUpdate.findIndex(\r\n        (task) => task.id === state.taskEdit.id\r\n      );\r\n      if (index !== -1) {\r\n        taskListUpdate[index] = state.taskEdit;\r\n      }\r\n      state.taskList = taskListUpdate;\r\n      state.taskEdit = { id: \"-1\", taskName: \"\", done: false };\r\n\r\n      return { ...state };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default toDoListReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport toDoListReducer from \"../Reducer/ToDoListReducer\";\r\nconst rootReducer = combineReducers({\r\n  toDoListReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./redux/Reducer/RootReducer\";\r\nconst store = createStore(rootReducer);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}